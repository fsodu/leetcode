/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int findBottomLeftValue(TreeNode root) {
        Queue<TreeNode> q = new LinkedList<>();
        if (root == null) return -1; 
        q.offer(root);
        int val = 0; 
        
        while (!q.isEmpty()) {
            int count = q.size(); 
            TreeNode first = q.poll();
            addNode(first, q);
            for (int i = 0; i < count - 1; i++) {
                addNode(q.poll(), q);
            }
            if (q.size() == 0) val = first.val; 
        }
        
        return val; 
    }
    
    public void addNode(TreeNode node, Queue q) {
        if (node.left != null) q.offer(node.left);
        if (node.right != null) q.offer(node.right);
    }
}
