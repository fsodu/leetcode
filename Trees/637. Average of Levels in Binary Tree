/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Double> averageOfLevels(TreeNode root) {
        List<Double> res = new ArrayList<>();
        Queue<TreeNode> q = new ArrayDeque<>();
        if (root == null) return res; 
        q.offer(root); 
        int count = 1; 
        
        while (!q.isEmpty()) {
            int next = 0; 
            double sum = 0; 
            for (int i = 0; i < count; i++) {
                TreeNode curr = q.poll();
                sum += curr.val;
                if (curr.left != null) {
                    q.offer(curr.left);
                    next++;
                }
                if (curr.right != null) {
                    q.offer(curr.right);
                    next++;
                }
            }
            double average = sum / count; 
            res.add(average);
            count = next; 
        }
        
        return res; 
        
    }
}
