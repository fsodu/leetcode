/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String> paths = new ArrayList<>();
        backtrack(root, paths, new String());
        return paths;
        
    }
    
    public void backtrack(TreeNode node, List<String> paths, String temp) {
        if (node == null) return;
        String next = temp + "->" + node.val;
        if (node.left == null && node.right == null) {
            next = next.substring(2, next.length());
            paths.add(next);
        } 
        backtrack(node.left, paths, next);
        backtrack(node.right, paths, next);
        
    }
}
