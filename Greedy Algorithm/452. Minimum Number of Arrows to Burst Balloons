class Solution {
    public int findMinArrowShots(int[][] points) {
        
        int arrows = 1; 
        
        if (points.length == 1) return arrows; 
        
        Arrays.sort(points, new Comparator<int[]>() {
            @Override
            public int compare(int[] o1, int[]o2) {
                return (o1[1] > o2[1]) ? 1 : ((o1[1] == o2[1]) ? 0 : -1);
            }
        });
        
        for (int i = 1; i < points.length; i++) {
            if (overlap(points[i], points[i - 1])) {
                points[i][0] = Math.max(points[i][0], points[i - 1][0]);
                points[i][1] = Math.min(points[i][1], points[i - 1][1]);
            } else {
                arrows++;
            }
        }
        
        return arrows;
    }
    
    public boolean overlap(int[] a, int[] b) {
        return !(a[0] > b[1] || b[0] > a[1]);
    }
}
