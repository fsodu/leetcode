class Solution {
    public int[] dailyTemperatures(int[] temperatures) {
        int size = temperatures.length; 
        int[] answer = new int[size];
        for (int i = 0; i < size; i++) {
            int curr = temperatures[i]; 
            answer[i] = 0; 
            for (int j = i + 1; j < size; j++) {
                if (temperatures[j] > curr) {
                    answer[i] = j - i; 
                    break;
                }
            }
        }
        return answer; 
    }
}

// time O(N^2) space O(N)


class Solution {
    public int[] dailyTemperatures(int[] temperatures) {
        Stack<Integer> indexes = new Stack<>();
        int[] answer = new int[temperatures.length]; 
        
        indexes.push(0); 
        answer[0] = 0; 
        
        for (int i = 1; i < temperatures.length; i++) {
            int curr = temperatures[i];
            answer[i] = 0; 
            while (!indexes.isEmpty() && curr > temperatures[indexes.peek()]) {
                int index = indexes.pop();
                answer[index] = i - index; 
            }
            indexes.push(i);
        }
        
        return answer;
    }
}

// time O(N) space O(N)
