class Solution {
    public char[] parentheses = new char[]{'(', ')', '{', '}', '[', ']'};
    
    public boolean isValid(String s) {
        
        Stack<Character> stack = new Stack<>();
        
        for (char c : s.toCharArray()) {
            if (stack.isEmpty()) {
                stack.push(c);
                continue;
            }
            char last = stack.peek();
            if (getDex(last) + 1 == getDex(c) && getDex(last) / 2 == getDex(c) / 2) {
                stack.pop();
            } else {
                stack.push(c);
            }
        }
        
        return stack.isEmpty();
        
    }
    
    public int getDex(char c) {
        for (int i = 0; i < 6; i++) {
            if (parentheses[i] == c) return i;
        }
        return -1; 
    }
}


class Solution {
    public boolean isValid(String s) {
        
        Stack<Character> stack = new Stack<>();
        
        for (char ch : s.toCharArray()){
            if (ch == '(') {
                stack.push(')');
            } else if (ch == '{') {
                stack.push('}');
            } else if (ch == '[') {
                stack.push(']');
            } else if (stack.empty() || stack.pop() != ch) {
                return false;
            }
        }
        
        return stack.empty();
        
    }
}
