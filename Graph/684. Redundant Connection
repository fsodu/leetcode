class Solution {
    
    public int[] graph;
    
    public int[] findRedundantConnection(int[][] edges) {
        int n = edges.length; 
        graph = new int[n + 1]; 
        
        for (int i = 0; i < n + 1; i++) {
            graph[i] = i; 
        }
        for (int[] edge : edges) {
            if (isConnected(edge[0], edge[1])) return edge; 
            connect(edge);
        }
        return new int[]{-1, -1};
    }
    
    public void connect(int[] edge) {
        int num1 = graph[edge[0]];
        int num2 = graph[edge[1]];
        if (num1 == num2) return; 
        for (int i = 0; i < graph.length; i++) {
            if (graph[i] == num1) {
                graph[i] = num2;
            }
        }
    }
    
    public boolean isConnected(int a, int b) {
        return graph[a] == graph[b];
    }
}
