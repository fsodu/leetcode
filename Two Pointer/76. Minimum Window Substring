class Solution {
    public String minWindow(String s, String t) {
        
        if (s.length() < t.length()) return "";
        
        int start = 0; 
        int count = 0;
        int min = Integer.MAX_VALUE;
        String output = ""; 
        Map<Character, Integer> target = new HashMap<>();
        
        for (char c : t.toCharArray()) {
            int number = target.getOrDefault(c, 0);
            target.put(c, number + 1);
        }
        
        for (int end = 0; end < s.length(); end++) {
            
            char c = s.charAt(end);
            
            if (target.containsKey(c)) {
                target.put(c, target.get(c) - 1);
                if (target.get(c) >= 0) count++;
            } 
                      
            while (count == t.length()) {
                
                if (end - start + 1 < min) {
                    min = end - start + 1;
                    output = s.substring(start, end + 1);
                }
                char trim = s.charAt(start);
                if (target.get(trim) != null) {
                    target.put(trim, target.get(trim) + 1);
                    if (target.get(trim) > 0) count--;
                }
                start++;
            }
        }
        
        return output; 
    }
}
