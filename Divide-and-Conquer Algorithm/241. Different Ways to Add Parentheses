class Solution {
    
    private final static Set<Character> operators = new HashSet<>(Arrays.asList('+', '-', '*'));
    
    public List<Integer> diffWaysToCompute(String expression) {
        
        List<Integer> res = new ArrayList<>();

        for (int i = 0; i < expression.length(); i++) {
            char c = expression.charAt(i);
            if (operators.contains(c)) {
                List<Integer> left = diffWaysToCompute(expression.substring(0, i));
                List<Integer> right = diffWaysToCompute(expression.substring(i + 1, expression.length()));
                
                for (int l : left) {
                    for (int r : right) {
                        switch (c) {
                            case '+' :
                                res.add(l + r);
                                break;
                            case '-' : 
                                res.add(l - r);
                                break;
                            case '*' : 
                                res.add(l * r);
                                break;
                        }
                    }
                }
            }
        }
        
        if (res.size() == 0) {
            res.add(Integer.valueOf(expression));
            return res;
        } 
        
        return res; 
        
    }
    
    
    
}
