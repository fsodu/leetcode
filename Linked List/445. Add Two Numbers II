class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        Stack<Integer> num1 = build(l1);
        Stack<Integer> num2 = build(l2);
        int carry = 0, a = 0, b = 0; 
        ListNode sentinel = new ListNode();
        while (!num1.isEmpty() || !num2.isEmpty() || carry != 0) {
            a = num1.isEmpty() ? 0 : num1.pop(); 
            b = num2.isEmpty() ? 0 : num2.pop();
            int num = (a + b + carry) % 10; 
            sentinel.next = new ListNode(num, sentinel.next);
            carry =  (a + b + carry >= 10) ? 1 : 0; 
        }
        
        return sentinel.next;
    }
    
    
    public Stack<Integer> build(ListNode head) {
        Stack<Integer> stack = new Stack<>();
        while (head != null) {
            stack.push(head.val);
            head = head.next; 
        }
        return stack; 
    }
}
