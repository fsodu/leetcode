// logN binary search

class Solution {
    public int findDuplicate(int[] nums) {
        int l = 1, h = nums.length - 1; 
        while (l <= h) {
            int middle = l + (h - l) / 2; 
            int cnt = 0; 
            for (int i : nums) {
                if (i <= middle) cnt++;
            }
            if (cnt > middle) h = middle - 1; 
            else l = middle + 1; 
        }
        
        return l; 
    }
}




// N^2 solution

class Solution {
    public int findDuplicate(int[] nums) {
        int size = nums.length - 1; 
        for (int i = 1; i <= size; i++) {
            boolean appeared = false;
            for (int n : nums) {
                if (n == i && appeared) return n;
                if (n == i) appeared = true; 
            }
        }
        return -1; 
    }
}
